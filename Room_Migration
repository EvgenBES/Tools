@Database(entities = [Items::class], version = 3)
abstract class AppDataBase : RoomDatabase() {

    companion object {
     private const val DATABASE_NAME = "db_ratusha"

      // I can created it to a separate class - MigrationUtils
      // and we get cleaner code
        val MIGRATION_2_3: Migration = object : Migration(2, 3) {
            override fun migrate(database: SupportSQLiteDatabase) {
                database.execSQL("ALTER TABLE items ADD COLUMN reputation REAL DEFAULT 0 NOT NULL")
                database.execSQL("ALTER TABLE items ADD COLUMN countItemRep INTEGER DEFAULT 0 NOT NULL")
            }
        }

        fun getInstance(context: Context): AppDataBase {
        
            return RoomAssetHelper.databaseBuilder(context, AppDataBase::class.java, DATABASE_NAME)
                    .addMigrations(MIGRATION_2_3)
                    .build()
        }
    }

    abstract fun getItemsDao(): ItemsDao
}
